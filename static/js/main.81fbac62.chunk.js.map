{"version":3,"sources":["logo.png","components/API.js","components/Cards.js","components/Chart.js","components/CountryPicker.js","App.js","reportWebVitals.js","index.js"],"names":["url","fetchCountries","a","axios","get","countries","data","console","error","fetchCountry","country","changeableUrl","confirmed","recovered","deaths","lastUpdate","Cards","useState","countryInfo","setCountryInfo","useEffect","fetchAPI","value","className","style","borderBottom","background","undefined","end","separator","moment","format","Chart","labels","datasets","label","backgroundColor","hoverBackgroundColor","values","setValues","options","title","display","text","fontSize","legend","position","CountryPicker","handleCountryChange","setCountries","maxWidth","name","aria-describedby","onChange","e","target","map","id","length","App","setCountry","src","logo","width","height","paddingBottom","alt","color","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.81fbac62.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.89c36976.png\";","import axios from \"axios\";\r\n\r\nconst url = `https://covid19.mathdro.id/api`;\r\n\r\n// Fetching countries\r\nexport const fetchCountries = async () => {\r\n  try {\r\n    const countries = await axios.get(`${url}/countries/`);\r\n    return countries.data.countries;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\n// Fetching specific country\r\nexport const fetchCountry = async (country) => {\r\n  let changeableUrl = url;\r\n  if (country) {\r\n    changeableUrl = `${url}/countries/${country}`;\r\n  }\r\n  try {\r\n    const {\r\n      data: { confirmed, recovered, deaths, lastUpdate },\r\n    } = await axios.get(changeableUrl);\r\n    return { confirmed, recovered, deaths, lastUpdate };\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { fetchCountry } from \"./API\";\r\nimport moment from \"moment\";\r\nimport CountUp from \"react-countup\";\r\n\r\nconst Cards = ({ country }) => {\r\n  const [countryInfo, setCountryInfo] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setCountryInfo(await fetchCountry(country));\r\n    };\r\n    fetchAPI();\r\n  }, [country]);\r\n\r\n  let confirmed = countryInfo.confirmed && countryInfo.confirmed.value;\r\n  let recovered = countryInfo.recovered && countryInfo.recovered.value;\r\n  let deaths = countryInfo.deaths && countryInfo.deaths.value;\r\n  let lastUpdate = countryInfo.lastUpdate && countryInfo.lastUpdate;\r\n\r\n  return (\r\n    <div className='row'>\r\n      <div className='col-4 col-md-4 col-lg 12 col-12'>\r\n        <div\r\n          className='card text-center '\r\n          style={{ borderBottom: \"solid 8px #877bfa\" }}\r\n        >\r\n          <div className='card-header' style={{ background: \"#877bfa\" }}>\r\n            Infected\r\n          </div>\r\n          <div className='card-body'>\r\n            <h5 className='card-title'>\r\n              {confirmed === undefined ? (\r\n                <span className='spinner-border text-danger'></span>\r\n              ) : (\r\n                <CountUp\r\n                  end={confirmed !== undefined && confirmed}\r\n                  separator=','\r\n                />\r\n              )}\r\n            </h5>\r\n            <h5 className='card-title text-muted'>\r\n              {moment(lastUpdate).format(\"MMMM Do YYYY, h:mm:ss a\")}\r\n            </h5>\r\n            <p className='card-text'>Number of active cases of COVID-19</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className='col-4 col-md-4 col-lg 12 col-12'>\r\n        <div\r\n          className='card text-center '\r\n          style={{ borderBottom: \"solid 8px #66fb61\" }}\r\n        >\r\n          <div className='card-header' style={{ background: \"#66fb61\" }}>\r\n            Recovered\r\n          </div>\r\n          <div className='card-body'>\r\n            <h5 className='card-title'>\r\n              {recovered === undefined ? (\r\n                <span className='spinner-border text-danger'></span>\r\n              ) : (\r\n                <CountUp\r\n                  end={recovered !== undefined && recovered}\r\n                  separator=','\r\n                />\r\n              )}\r\n            </h5>\r\n            <h5 className='card-title text-muted'>\r\n              {moment(lastUpdate).format(\"MMMM Do YYYY, h:mm:ss a\")}\r\n            </h5>\r\n            <p className='card-text'>Number of recovers from COVID-19</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className='col-4 col-md-4 col-lg 12 col-12'>\r\n        <div\r\n          className='card text-center '\r\n          style={{ borderBottom: \"solid 8px #fb619c\" }}\r\n        >\r\n          <div className='card-header' style={{ background: \"#fb619c\" }}>\r\n            Deaths\r\n          </div>\r\n          <div className='card-body'>\r\n            <h5 className='card-title'>\r\n              {deaths === undefined ? (\r\n                <span className='spinner-border text-danger'></span>\r\n              ) : (\r\n                <CountUp end={deaths !== undefined && deaths} separator=',' />\r\n              )}\r\n            </h5>\r\n            <h5 className='card-title text-muted'>\r\n              {moment(lastUpdate).format(\"MMMM Do YYYY, h:mm:ss a\")}\r\n            </h5>\r\n            <p className='card-text'>Number of deaths caused by COVID-19</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cards;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Doughnut } from \"react-chartjs-2\";\r\nimport { fetchCountry } from \"./API\";\r\n\r\nfunction Chart({ country }) {\r\n  const [values, setValues] = useState({\r\n    labels: [\"Infected\", \"Recovered\", \"Deaths\"],\r\n    datasets: [\r\n      {\r\n        label: \"Rainfall\",\r\n        backgroundColor: [\"#877bfa\", \"#66fb61\", \"#fb619c\"],\r\n        hoverBackgroundColor: [\"#6555f3\", \"#3be635\", \"#f52374\"],\r\n        data: [],\r\n      },\r\n    ],\r\n  });\r\n\r\n  const [countryInfo, setCountryInfo] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setCountryInfo(await fetchCountry(country));\r\n    };\r\n    fetchAPI();\r\n  }, [country]);\r\n\r\n  let confirmed = countryInfo.confirmed && countryInfo.confirmed.value;\r\n  let recovered = countryInfo.recovered && countryInfo.recovered.value;\r\n  let deaths = countryInfo.deaths && countryInfo.deaths.value;\r\n\r\n  useEffect(() => {\r\n    setValues({\r\n      ...values,\r\n      datasets: [\r\n        { ...values.datasets[0], data: [confirmed, recovered, deaths] },\r\n      ],\r\n    });\r\n  }, [countryInfo]);\r\n\r\n  return (\r\n    <div className='text-center'>\r\n      {confirmed === undefined ? (\r\n        <span className='spinner-border text-danger'></span>\r\n      ) : (\r\n        <Doughnut\r\n          data={values}\r\n          options={{\r\n            title: {\r\n              display: true,\r\n              text: \"Statistics\",\r\n              fontSize: 20,\r\n            },\r\n            legend: {\r\n              display: true,\r\n              position: \"top\",\r\n            },\r\n          }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chart;\r\n","import { useEffect, useState } from \"react\";\r\nimport { fetchCountries } from \"./API\";\r\n\r\nconst CountryPicker = ({ handleCountryChange }) => {\r\n  const [countries, setCountries] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setCountries(await fetchCountries());\r\n    };\r\n    fetchAPI();\r\n  }, [countries]);\r\n\r\n  return (\r\n    <div className='input-group my-3 m-auto ' style={{ maxWidth: \"500px\" }}>\r\n      <select\r\n        name='search'\r\n        aria-describedby='basic-addon2'\r\n        className='form-control shadow-none'\r\n        onChange={(e) => handleCountryChange(e.target.value)}\r\n      >\r\n        <option value=''>Global</option>\r\n        {countries.map((country) => {\r\n          return (\r\n            <option value={countries.name} key={country.name}>\r\n              {country.name}\r\n            </option>\r\n          );\r\n        })}\r\n      </select>\r\n\r\n      <span className='input-group-text' id='basic-addon2'>\r\n        {countries.length === 0 ? (\r\n          <span className='spinner-grow text-danger'></span>\r\n        ) : (\r\n          <i className='fa fa-search'></i>\r\n        )}\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CountryPicker;\r\n","import { useState } from \"react\";\r\nimport \"./App.css\";\r\nimport logo from \"./logo.png\";\r\nimport Cards from \"./components/Cards\";\r\nimport Chart from \"./components/Chart\";\r\nimport CountryPicker from \"./components/CountryPicker\";\r\n\r\nfunction App() {\r\n  const [country, setCountry] = useState(\"\");\r\n  const handleCountryChange = async (e) => {\r\n    await setCountry(e);\r\n  };\r\n\r\n  return (\r\n    <div className='container my-4'>\r\n      <div className='text-center'>\r\n        <img\r\n          src={logo}\r\n          style={{ width: \"100px\", height: \"auto\", paddingBottom: \"20px\" }}\r\n          alt=''\r\n        />{\" \"}\r\n        <span style={{ fontSize: \"30px\", color: \"#58c5f8\" }}>Tracker</span>\r\n      </div>\r\n      <Cards country={country} />\r\n\r\n      <CountryPicker handleCountryChange={handleCountryChange} />\r\n\r\n      <Chart country={country} />\r\n\r\n      <div className='card-footer my-5 text-muted text-center'>\r\n        Developer Contact:{\" \"}\r\n        <a href='mailto:ahmaat19@gmail.com'>ahmaat19@gmail.com</a>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}